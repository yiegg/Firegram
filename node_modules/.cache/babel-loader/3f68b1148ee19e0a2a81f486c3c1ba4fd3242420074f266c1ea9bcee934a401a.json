{"ast":null,"code":"var _jsxFileName = \"/Users/robert/Downloads/firegram/src/comps/UploadForm.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nexport default function UploadForm() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const types = ['image/png', 'image/jpeg'];\n  const changeHandler = e => {\n    let selected = e.target.files[0];\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError(null);\n    } else {\n      setFile(null);\n      setError('Please select an image (png or jpeg)');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 27\n    }\n  }, \"error\")));\n}\n_s(UploadForm, \"g4In/gal2dmIIDovhnep1NQJW40=\");\n_c = UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","UploadForm","_s","file","setFile","useState","error","setError","types","changeHandler","e","selected","target","files","includes","type","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","className","_c","$RefreshReg$"],"sources":["/Users/robert/Downloads/firegram/src/comps/UploadForm.js"],"sourcesContent":["import React from \"react\";\nexport default function UploadForm() {\n    const [file, setFile] = useState(null);\n    const [error, setError] = useState(null);\n\n    const types = ['image/png', 'image/jpeg'];\n    const changeHandler = (e) => {\n        let selected = e.target.files[0];\n        \n        if(selected && types.includes(selected.type)) {\n            setFile(selected);\n            setError(null);\n        } else {\n            setFile(null);\n            setError('Please select an image (png or jpeg)');\n        }\n    }\n    return (\n        <form>\n            <input type=\"file\" onChange={changeHandler}></input>\n            <div className=\"output\">\n                {error && <div className=\"error\">error</div>}\n            </div>\n        </form>\n    );\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMG,KAAK,GAAG,CAAC,WAAW,EAAE,YAAY,CAAC;EACzC,MAAMC,aAAa,GAAIC,CAAC,IAAK;IACzB,IAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAEhC,IAAGF,QAAQ,IAAIH,KAAK,CAACM,QAAQ,CAACH,QAAQ,CAACI,IAAI,CAAC,EAAE;MAC1CX,OAAO,CAACO,QAAQ,CAAC;MACjBJ,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,MAAM;MACHH,OAAO,CAAC,IAAI,CAAC;MACbG,QAAQ,CAAC,sCAAsC,CAAC;IACpD;EACJ,CAAC;EACD,oBACIP,KAAA,CAAAgB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACItB,KAAA,CAAAgB,aAAA;IAAOD,IAAI,EAAC,MAAM;IAACQ,QAAQ,EAAEd,aAAc;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAQ,CAAC,eACpDtB,KAAA,CAAAgB,aAAA;IAAKQ,SAAS,EAAC,QAAQ;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClBhB,KAAK,iBAAIN,KAAA,CAAAgB,aAAA;IAAKQ,SAAS,EAAC,OAAO;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAAU,CAC1C,CACH,CAAC;AAEf;AAACpB,EAAA,CAxBuBD,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}