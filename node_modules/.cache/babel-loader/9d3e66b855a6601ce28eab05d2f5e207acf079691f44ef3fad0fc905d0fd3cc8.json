{"ast":null,"code":"var _s = $RefreshSig$();\nimport { async } from \"@firebase/util\";\nimport { useState, useEffect } from \"react\";\nimport { projectStorage, projectFirestore } from \"../firebase/config\";\nimport { ref } from 'firebase/storage';\nconst useStorage = file => {\n  _s();\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    //references\n    const storageRef = ref(projectStorage, file.name);\n    storageRef.put(file).on('state_changed', snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      setUrl(url);\n    });\n  }, [file]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n_s(useStorage, \"xn2AiAzche7NzWswJ7VS1PhvjkU=\");\nexport default useStorage;","map":{"version":3,"names":["async","useState","useEffect","projectStorage","projectFirestore","ref","useStorage","file","_s","progress","setProgress","error","setError","url","setUrl","storageRef","name","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL"],"sources":["/Users/robert/Downloads/firegram/src/hooks/useStorage.js"],"sourcesContent":["import { async } from \"@firebase/util\";\nimport { useState, useEffect } from \"react\";\nimport { projectStorage, projectFirestore } from \"../firebase/config\";\nimport {ref} from 'firebase/storage'\n\nconst useStorage = (file) => {\n    const[progress, setProgress] = useState(0);\n    const[error, setError] = useState(null);\n    const[url, setUrl] = useState(null);\n\n    useEffect(() => {\n        //references\n        const storageRef = ref(projectStorage,file.name);\n\n        storageRef.put(file).on('state_changed', (snap) => {\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n            setProgress(percentage);\n        }, (err) => {\n            setError(err);\n        }, async() => {\n            const url = await storageRef.getDownloadURL();\n            setUrl(url);\n        })\n    },[file]);\n\n    return {progress, url, error};\n}\n\nexport default useStorage;"],"mappings":";AAAA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,cAAc,EAAEC,gBAAgB,QAAQ,oBAAoB;AACrE,SAAQC,GAAG,QAAO,kBAAkB;AAEpC,MAAMC,UAAU,GAAIC,IAAI,IAAK;EAAAC,EAAA;EACzB,MAAK,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAC1C,MAAK,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACvC,MAAK,CAACY,GAAG,EAAEC,MAAM,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEnCC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMa,UAAU,GAAGV,GAAG,CAACF,cAAc,EAACI,IAAI,CAACS,IAAI,CAAC;IAEhDD,UAAU,CAACE,GAAG,CAACV,IAAI,CAAC,CAACW,EAAE,CAAC,eAAe,EAAGC,IAAI,IAAK;MAC/C,IAAIC,UAAU,GAAID,IAAI,CAACE,gBAAgB,GAAGF,IAAI,CAACG,UAAU,GAAI,GAAG;MAChEZ,WAAW,CAACU,UAAU,CAAC;IAC3B,CAAC,EAAGG,GAAG,IAAK;MACRX,QAAQ,CAACW,GAAG,CAAC;IACjB,CAAC,EAAE,YAAW;MACV,MAAMV,GAAG,GAAG,MAAME,UAAU,CAACS,cAAc,CAAC,CAAC;MAC7CV,MAAM,CAACD,GAAG,CAAC;IACf,CAAC,CAAC;EACN,CAAC,EAAC,CAACN,IAAI,CAAC,CAAC;EAET,OAAO;IAACE,QAAQ;IAAEI,GAAG;IAAEF;EAAK,CAAC;AACjC,CAAC;AAAAH,EAAA,CArBKF,UAAU;AAuBhB,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}